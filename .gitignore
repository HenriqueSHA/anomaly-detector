.env
.env.local

# ----------------------
# Sistema operacional
# ----------------------
# macOS
.DS_Store

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini

# Arquivos temporários / de swap
*~
*.swp
*.swo

# ----------------------
# Editores / IDEs
# ----------------------
# VS Code
.vscode/
*.code-workspace

# JetBrains (IntelliJ, CLion, etc.)
.idea/

# ----------------------
# Rust / Cargo
# ----------------------
# Diretórios de build/cache (remova se quiser versionar builds locais)
/target/

# Cargo.lock: para crates de biblioteca normalmente NÃO comitar; para aplicativos, comitar pode ser desejável.
Cargo.lock

# Backups específicos de Rust
**/*.rs.bk

# ----------------------
# Node / front-end
# ----------------------
# Dependências
node_modules/
**/node_modules/

# Build outputs
dist/
build/
/.parcel-cache/
.next/

# Logs do gerenciador de pacotes
yarn-error.log
npm-debug.log
yarn-debug.log

# Lockfiles (opte por comitar se for o policy do projeto)
package-lock.json

# Entradas específicas do projeto
Client-js/node_modules/
src/program/target/

# ----------------------
# Binários, objetos e bibliotecas
# ----------------------
*.o
*.so
*.out
*.exe
*.dll
*.dylib

# ----------------------
# Logs, temporários e caches
# ----------------------
*.log
*.tmp

# ----------------------
# Arquivos compactados e backups
# ----------------------
*.tar
*.zip
*.gz
*.7z
*.bak

# Arquivos grandes (marca genérica; ajuste conforme necessário)
*.largefile

# ----------------------
# Dados locais / dumps
# ----------------------
# Arquivos de exportação do Firebase e outros dumps locais — ajustar se quiser versionar
/data/firebase*.json
/data/*.json

# ----------------------
# Observações
# - Este arquivo foi reorganizado para ser mais legível e livre de entradas duplicadas.
# - Se houver arquivos que você deseja versionar (por exemplo, `package-lock.json`), edite este arquivo conforme a política do repositório.